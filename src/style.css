/* reset - - - -  */
/* typescale */
/* @link https://utopia.fyi/type/calculator?c=384,16,1.2,1152,21,1.333,6,1,&s=0.75|0.5|0.25,1.5|2|3|4|6,2xs-m|l-3xl */
:root {
  --step--1: clamp(0.98rem, calc(0.76rem + 0.32vw), 0.83rem);
  --step-0: clamp(1rem, calc(0.84rem + 0.65vw), 1.31rem);
  --step-1: clamp(1.2rem, calc(0.93rem + 1.14vw), 1.75rem);
  --step-2: clamp(1.44rem, calc(0.99rem + 1.86vw), 2.33rem);
  --step-3: clamp(1.73rem, calc(1.04rem + 2.88vw), 3.11rem);
  --step-4: clamp(2.07rem, calc(1.04rem + 4.31vw), 4.14rem);
  --step-5: clamp(2.49rem, calc(0.97rem + 6.32vw), 5.52rem);
  --step-6: clamp(2.99rem, calc(0.8rem + 9.12vw), 7.36rem);
  --step-7: clamp(3.58rem, calc(0.47rem + 12.98vw), 9.82rem);
}
/* space scale */
/* @link https://utopia.fyi/space/calculator?c=384,16,1.2,1152,21,1.333,4,1,&s=0.75|0.5|0.25,1.5|2|3|4|6,2xs-m|l-3xl */
:root {
  --space-3xs: clamp(0.25rem, calc(0.22rem + 0.13vw), 0.31rem);
  --space-2xs: clamp(0.5rem, calc(0.41rem + 0.39vw), 0.69rem);
  --space-xs: clamp(0.75rem, calc(0.63rem + 0.52vw), 1rem);
  --space-s: clamp(1rem, calc(0.84rem + 0.65vw), 1.31rem);
  --space-m: clamp(1.5rem, calc(1.25rem + 1.04vw), 2rem);
  --space-l: clamp(2rem, calc(1.69rem + 1.3vw), 2.63rem);
  --space-xl: clamp(3rem, calc(2.53rem + 1.95vw), 3.94rem);
  --space-2xl: clamp(4rem, calc(3.38rem + 2.6vw), 5.25rem);
  --space-3xl: clamp(6rem, calc(5.06rem + 3.91vw), 7.88rem);

  /* One-up pairs */
  --space-3xs-2xs: clamp(0.25rem, calc(0.03rem + 0.91vw), 0.69rem);
  --space-2xs-xs: clamp(0.5rem, calc(0.25rem + 1.04vw), 1rem);
  --space-xs-s: clamp(0.75rem, calc(0.47rem + 1.17vw), 1.31rem);
  --space-s-m: clamp(1rem, calc(0.5rem + 2.08vw), 2rem);
  --space-m-l: clamp(1.5rem, calc(0.94rem + 2.34vw), 2.63rem);
  --space-l-xl: clamp(2rem, calc(1.03rem + 4.04vw), 3.94rem);
  --space-xl-2xl: clamp(3rem, calc(1.88rem + 4.69vw), 5.25rem);
  --space-2xl-3xl: clamp(4rem, calc(2.06rem + 8.07vw), 7.88rem);

  /* Custom pairs */
  --space-2xs-m: clamp(0.5rem, calc(-0.25rem + 3.13vw), 2rem);
  --space-l-3xl: clamp(2rem, calc(-0.94rem + 12.24vw), 7.88rem);
}
/* colors */
:root {
  --hue: 15;
  --hue-offset: 43;
  --offset-mult: 3.75;

  --col-blk: calc(var(--hue)) 30% 20%;
  --col-wht: calc(var(--hue)) 20% 97.5%;

  --col-primary: var(--hue) 95% 65%;
  --col-secondary: calc(var(--hue) + (var(--hue-offset))) 90% 60%;
  --col-ternary: calc(var(--hue) + (var(--hue-offset) * var(--offset-mult))) 85%
    45%;
}
/* transition */
:root {
  --transition-timing-mud: cubic-bezier(0.1, 0, 0.2, 1);
  --transition-timing-pillow: cubic-bezier(0.2, 2, 0.3, 0.8);

  --page-transition-duration: 175ms;
}
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
button {
  cursor: pointer;
  border-style: none;
  border-color: currentColor;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
ol,
ul {
  list-style: none;
}
img,
video,
svg {
  max-width: 100%;
  display: block;
}
img,
video,
figure,
.duo-tone {
  overflow: hidden;
  border-radius: 6px;
}
svg {
  overflow: hidden;
}
svg {
  fill: currentColor;
}
a {
  color: currentColor;
  position: relative;
}

a:focus {
  outline: none;
}
a:not([href^="/"]):focus {
  text-decoration-color: hsl(var(--col-ternary));
  font-variation-settings: "wght" 400;
  text-decoration-thickness: 3px;
  text-decoration-skip-ink: none;
}
a span {
  position: relative;
  pointer-events: none;
}
a span::after {
  transition-property: height;
  transition-duration: 25ms;
  transition-timing-function: ease-out;
}
a:not(.under-construction):is(:hover, :focus) span::after {
  height: 50%;
}
a span::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0%;
  background-color: hsl(var(--col-secondary));
  z-index: -1;
}
:where(button:focus) {
  color: hsl(var(--col-primary));
  outline: none;
  --focus-shadow: 0 0 0 2px currentColor;
  /* box-shadow: 0 0 0 2px currentColor; */
  border-radius: 2px;
}
button {
  box-shadow: var(--focus-shadow);
}

body,
html {
  height: 100%;
}
html {
  background-color: hsl(var(--col-wht));
  padding: 0.5rem;

  transition-property: padding;
  transition-delay: 0s;
  transition-duration: 300ms;
  /* will-change: padding; */
}
@media (min-width: 512px) {
  html.transitioning {
    padding: 0.75rem;
  }
}
body {
  display: grid;
  /* padding: 0.25rem; */
  border-radius: 6px;
  color: hsl(var(--col-blk));
  line-height: 1.5;
  font-size: var(--step-1);

  font-family: Arial, Helvetica, sans-serif;
  border-radius: 8px;

  background-color: hsl(var(--col-blk) / 0.01);
  /* background-color: hsl(var(--col-primary) / 0.005); */
  box-shadow: 0 0 2px 0 inset hsl(var(--col-wht) / 1),
    0 0 4px 1px inset hsl(var(--col-primary) / 0.1),
    0 0 8px 3px inset hsl(var(--col-blk) / 0.05);
}

/* reset - - - -  */

/* prose */
@font-face {
  font-family: SCPVariable;
  src: url("/assets/fonts/SCPVariable.ttf");
  font-display: fallback;
}
@font-face {
  font-family: VollkornVariable;
  src: url("/assets/fonts/VollkornVariable.ttf");
  font-display: fallback;
}

body {
  font-family: SCPVariable, Arial, Helvetica, sans-serif;
  line-height: 1.5;
  color: hsl(var(--col-blk));
  font-size: var(--step-0);
  font-variation-settings: "wght" 300;
}
strong {
  font-variation-settings: "wght" 400;
}

:where(h1, h2, h3) {
  line-height: 1;
  transition-property: font-size;

  font-family: VollkornVariable;
  transition-duration: 200ms;
  transition-timing-function: ease-out;
  transition-delay: 175ms;
}
:where(h1, h2, h3) {
  line-height: 1;
}
.prose:where(h1, h2, h3) {
  margin-bottom: 0.5em;
}
h1 {
  font-size: var(--step-7);
}
h2 {
  font-size: var(--step-4);
}
:where(h1, h2) {
}
h3 {
  font-size: var(--step-2);
}

hr {
  --flow-gap: 2rem;
  margin-top: var(--flow-gap, 1rem);
  margin-bottom: var(--flow-gap, 1rem);
}

/* nav - -  */
site-nav {
  /* viewport dependent */
  grid-row: 2;
  grid-column: 2;
  align-self: flex-end;
  justify-self: flex-end;

  z-index: 100;
  width: max-content;
  height: max-content;

  margin: 0.5rem;

  display: flex;
  flex-direction: column;

  pointer-events: none;
}
site-nav ul {
  padding: 1rem;
  background-color: white;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;

  line-height: 1;
  transition-property: transform, opacity;
  transition-duration: 125ms;
  transition-timing-function: var(--transition-timing-mud);

  border-radius: 6px;
  box-shadow: 0 0 12px 0 hsl(var(--col-blk) / 0.2);
}
site-nav button {
  /* viewport dependent */
  pointer-events: all;
  order: 1;
  align-self: flex-end;
  padding: 0.25rem;
}
site-nav[state="open"] ul {
  transform: translateY(0);
  opacity: 1;
}
site-nav[state="open"] {
  pointer-events: all;
}
@keyframes thinking {
  from {
    fill: hsl(var(--col-secondary));
  }
  to {
    fill: hsl(var(--col-ternary));
  }
}
html.navigating site-nav button svg circle {
  animation-name: thinking;
  animation-duration: 500ms;
  animation-iteration-count: infinite;
  animation-delay: var(--a-d);
}
site-nav button svg circle {
  transition-property: transform;
  transition-duration: 525ms;
  transition-timing-function: var(--transition-timing-mud);
}
site-nav[state="open"] button svg circle:nth-child(1) {
  transform: translateY(2px);
}
site-nav[state="open"] button svg circle:nth-child(3) {
  transform: translateY(-2px);
}
site-nav[state="close"] ul {
  transform: translateY(4px);
  opacity: 0;
  pointer-events: none;
}
site-nav ul a {
  display: flex;
  gap: 0.5em;
  text-decoration: none;
}
site-nav ul a[aria-current="page"] span::after {
  /* transition-property: height; */
}
site-nav ul a.err {
  color: white;
}
site-nav ul a.err span::after {
  height: 100% !important;
  background-color: red;
}
site-nav ul a.under-construction {
  cursor: progress;
  text-decoration: line-through;
  opacity: 0.25;
}
site-nav ul svg {
  fill: transparent;
  stroke: currentColor;
  stroke-width: 2;
  pointer-events: none;
}

site-nav[state="open"] + main {
  pointer-events: none;
  filter: blur(4px) grayscale(0.25) brightness(1.05);
}

site-nav a[aria-current="page"] svg {
  color: hsl(var(--col-primary));
}

/* main - -  */
main {
  grid-row: 1/3;
  grid-column: 1/3;

  padding: 1rem;

  height: 100%;
  width: 100%;

  overflow-y: scroll;

  display: grid;

  contain: paint;

  will-change: opacity, transform, filter;
}

/* media query */
@media (min-width: 512px) {
  /* nav alignment */
  site-nav {
    grid-row: 1;
    grid-column: 1;
    align-self: flex-start;
    justify-self: flex-start;
  }

  site-nav[state="close"] ul {
    transform: translateY(-4px);
  }
  site-nav button {
    order: 0;
    align-self: flex-start;
  }
  main {
    padding-top: 4rem;
  }
  #grain {
    pointer-events: none;
    display: block !important;
    opacity: 0.35;
  }
}

/* page transition  */
.slideIn,
.slideOut {
  animation-duration: var(--page-transition-duration);
  /* animation-fill-mode: forwards; */
  animation-timing-function: ease-out;
}
.slideIn {
  opacity: 0;
  animation-name: slideIn;
  animation-delay: var(--page-transition-duration);
  --in-dir: -1%;
}
.slideOut {
  --out-dir: 1%;
  animation-name: slideOut;
}
@keyframes slideIn {
  from {
    transform: translateX(var(--in-dir));
    opacity: 0;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

@keyframes slideOut {
  0% {
    transform: translateX(0%);
    opacity: 1;
  }
  100% {
    transform: translateX(var(--out-dir));
    opacity: 0;
  }
}

/* -- util -- */
.buttonish {
  --bg-col: hsl(var(--col-ternary));
  background-color: var(--bg-col);
  color: hsl(var(--col-wht));
  font-variation-settings: "wght" 400;
  padding-inline: 0.75em;
  border-radius: 6px;
  cursor: pointer;
  box-shadow: 0 2px 10px -2px var(--bg-col), var(--focus-shadow);
  transition-property: background-color, box-shadow;
  transition-duration: 125ms;
  transition-timing-function: ease-out;
}
.buttonish:is(:hover, :focus) {
  --bg-col: hsl(var(--col-primary));
}

.cramp {
  width: min(100%, 70rem);
  margin: 0 auto;
}
