/* props - - - - - -  */
:root {
  /* typescale */
  /* @link https://utopia.fyi/type/calculator?c=384,16,1.2,1152,21,1.333,6,1,&s=0.75|0.5|0.25,1.5|2|3|4|6,2xs-m|l-3xl */
  --step--1: clamp(0.98rem, calc(0.76rem + 0.32vw), 0.83rem);
  --step-0: clamp(1rem, calc(0.84rem + 0.65vw), 1.31rem);
  --step-1: clamp(1.2rem, calc(0.93rem + 1.14vw), 1.75rem);
  --step-2: clamp(1.44rem, calc(0.99rem + 1.86vw), 2.33rem);
  --step-3: clamp(1.73rem, calc(1.04rem + 2.88vw), 3.11rem);
  --step-4: clamp(2.07rem, calc(1.04rem + 4.31vw), 4.14rem);
  --step-5: clamp(2.49rem, calc(0.97rem + 6.32vw), 5.52rem);
  --step-6: clamp(2.99rem, calc(0.8rem + 9.12vw), 7.36rem);
  --step-7: clamp(3.58rem, calc(0.47rem + 12.98vw), 9.82rem);

  /* space scale */
  /* @link https://utopia.fyi/space/calculator?c=384,16,1.2,1152,21,1.333,4,1,&s=0.75|0.5|0.25,1.5|2|3|4|6,2xs-m|l-3xl */
  --space-3xs: clamp(0.25rem, calc(0.22rem + 0.13vw), 0.31rem);
  --space-2xs: clamp(0.5rem, calc(0.41rem + 0.39vw), 0.69rem);
  --space-xs: clamp(0.75rem, calc(0.63rem + 0.52vw), 1rem);
  --space-s: clamp(1rem, calc(0.84rem + 0.65vw), 1.31rem);
  --space-m: clamp(1.5rem, calc(1.25rem + 1.04vw), 2rem);
  --space-l: clamp(2rem, calc(1.69rem + 1.3vw), 2.63rem);
  --space-xl: clamp(3rem, calc(2.53rem + 1.95vw), 3.94rem);
  --space-2xl: clamp(4rem, calc(3.38rem + 2.6vw), 5.25rem);
  --space-3xl: clamp(6rem, calc(5.06rem + 3.91vw), 7.88rem);

  /* One-up pairs */
  --space-3xs-2xs: clamp(0.25rem, calc(0.03rem + 0.91vw), 0.69rem);
  --space-2xs-xs: clamp(0.5rem, calc(0.25rem + 1.04vw), 1rem);
  --space-xs-s: clamp(0.75rem, calc(0.47rem + 1.17vw), 1.31rem);
  --space-s-m: clamp(1rem, calc(0.5rem + 2.08vw), 2rem);
  --space-m-l: clamp(1.5rem, calc(0.94rem + 2.34vw), 2.63rem);
  --space-l-xl: clamp(2rem, calc(1.03rem + 4.04vw), 3.94rem);
  --space-xl-2xl: clamp(3rem, calc(1.88rem + 4.69vw), 5.25rem);
  --space-2xl-3xl: clamp(4rem, calc(2.06rem + 8.07vw), 7.88rem);

  /* Custom pairs */
  --space-2xs-m: clamp(0.5rem, calc(-0.25rem + 3.13vw), 2rem);
  --space-l-3xl: clamp(2rem, calc(-0.94rem + 12.24vw), 7.88rem);
}

/* colors */
:root {
  --hue: 15;
  --hue-offset: 40;
  --offset-mult: 3.75;

  --col-blk: calc(var(--hue)) 30% 20%;
  --col-wht: calc(var(--hue)) 20% 97.5%;

  --col-primary: var(--hue) 95% 55%;
  --col-secondary: calc(var(--hue) + (var(--hue-offset))) 90% 60%;
  --col-ternary: calc(var(--hue) + (var(--hue-offset) * var(--offset-mult))) 85%
    45%;
}
/* transition */
:root {
  --transition-timing-mud: cubic-bezier(0.1, 0, 0.2, 1);
  --transition-timing-pillow: cubic-bezier(0.2, 2, 0.3, 0.8);

  --page-transition-duration: 175ms;
}

/* props - - - - - -  */

/* type - - - - - - -  */
@font-face {
  font-family: "Source Code Pro";
  font-style: normal;
  font-weight: 300;
  font-display: fallback;
  src: local(""),
    url("/assets/fonts/scp/source-code-pro-v21-latin-300.woff2") format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/scp/source-code-pro-v21-latin-300.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

/* source-code-pro-regular - latin */
@font-face {
  font-family: "Source Code Pro";
  font-style: normal;
  font-weight: 400;
  font-display: fallback;
  src: local(""),
    url("/assets/fonts/scp/source-code-pro-v21-latin-regular.woff2")
      format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/scp/source-code-pro-v21-latin-regular.woff")
      format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

strong {
  font-weight: 1000;
}
small {
  font-size: var(--step-0);
}
:where(h1, h2, h3, h4) {
  font-weight: 100;
  line-height: 1;
  overflow-wrap: break-word;
  overflow: hidden;
}
h1 {
  font-size: var(--step-7);
}
h2 {
  font-size: var(--step-5);
}
h3 {
  font-size: var(--step-3);
}
h4 {
  font-size: var(--step-2);
}

hr {
  opacity: 0.5;
  border-style: solid;
  border-color: currentColor;
  border-width: 0.5px;
  --flow-gap: 1rem;
  margin-top: var(--flow-gap, 1rem);
  margin-bottom: var(--flow-gap, 1rem);
}
p {
  max-width: 70ch;
}
figcaption {
  font-style: italic;
  font-size: var(--step-0);
}

/* type - - - - - - -  */

img,
video,
figure {
  border-radius: var(--space-3xs);
}
figure{
  /* overflow: hidden; */
}

/* svg {
  overflow: hidden;
  fill: currentColor;
} */

/* macro layout - - - - - - - */

html {
  background-color: hsl(var(--col-wht));
}
body,
html {
  height: 100%;
  overflow: hidden;
}

body {
  overflow: hidden;
  color: hsl(var(--col-blk));

  font-family: Source Code Pro, sans-serif;
  font-size: var(--step-0);
  line-height: 1.5;
  font-weight: 300;

  border-radius: 6px;
  background-color: hsl(var(--col-blk) / 0.01);

  display: grid;
}

/* main - -  */
main {
  grid-row: 1/3;
  grid-column: 1/3;

  padding: var(--space-3xs);
  /* padding-bottom: var(--space-m); */
  padding-block: var(--space-s);
  height: 100%;
  width: 100%;

  overflow-y: scroll;
  overflow-x: hidden;

  /* display: grid; */

  contain: paint;

  will-change: opacity, transform, filter;
}
main > .wrapper {
  width: min(100%, var(--m-width, 100%));
  margin: 0 auto;

  display: grid;
}

#gridlines {
  z-index: -1;
  contain: paint;
  transition-property: opacity;
  transition-duration: 500ms;
  display: none;
}
html:where([router\:current-layout="writing-post.njk"], [router\:current-layout="works.njk"])
  #gridlines {
  opacity: 0;
}

/* macro layout - - - - - - - */

/* media query */
@media (min-width: 512px) {
  #gridlines {
    display: block;
  }
  html {
    padding: 0.5rem;
  }
  body {
    background-color: hsl(var(--col-blk) / 0.01);
    box-shadow: 0 0 2px 0 inset hsl(var(--col-wht) / 1),
      0 0 4px 1px inset hsl(var(--col-primary) / 0.1),
      0 0 8px 3px inset hsl(var(--col-blk) / 0.05);
  }

  #grain {
    pointer-events: none;
    display: block !important;
    opacity: 0.55;
    mix-blend-mode: hard-light;
  }
}

/* page transition - - - - - -   */

.slideIn,
.slideOut {
  animation-duration: var(--page-transition-duration);
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}
.slideIn {
  opacity: 0;
  animation-name: slideIn;
  animation-delay: var(--page-transition-duration);
  --in-dir: 0%;
}
.slideOut {
  --out-dir: 0%;
  animation-name: slideOut;
}
@keyframes slideIn {
  from {
    transform: translate(var(--in-dir));
    opacity: 0;
  }
  to {
    transform: translate(0% 0%);
    opacity: 1;
  }
}

@keyframes slideOut {
  0% {
    transform: translate(0% 0%);
    opacity: 1;
  }
  100% {
    transform: translate(var(--out-dir));
    opacity: 0;
  }
}

/* page transition - - - - - -   */

/* -- util -- */
.buttonish {
  --bg-col: hsl(var(--col-ternary));
  background-color: var(--bg-col);
  color: hsl(var(--col-wht));
  font-variation-settings: "wght" 400;
  padding-inline: 0.75em;
  border-radius: 6px;
  cursor: pointer;
  box-shadow: 0 0 12px 0 var(--bg-col), var(--focus-shadow, 0 0 0 0 black);
  transition-property: background-color, box-shadow;
  transition-duration: 125ms;
  transition-timing-function: ease-out;
}
.buttonish:is(:hover, :focus) {
  --bg-col: hsl(var(--col-primary));
}

ul.tags {
  justify-content: flex-end;
  flex-wrap: wrap;
}

ul.tags > li {
  padding-inline: 0.35em;
  border-radius: 4px;
  background-color: hsl(var(--col-secondary));
}

a:focus {
  outline: none;
}
a span {
  position: relative;
  pointer-events: none;
}
a span::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0%;
  background-color: hsl(var(--col-secondary));
  z-index: -1;
  transition-property: height;
  transition-duration: 25ms;
  transition-timing-function: ease-out;
}
a:is(:hover, :focus) span::after {
  height: 50%;
}
a:not([href^="/"],[href^="#"]){
  text-decoration-style: dashed;
  text-decoration-color: hsl(var(--col-ternary));
  text-decoration-thickness: 0.2ex;
}
/* a[download] {
  text-decoration-style: wavy;
  text-decoration-color: hsl(var(--col-primary) / 0.5) !important;
  text-decoration-thickness: 1px !important;
  text-underline-offset: 0.3ex;
}
a:not([href^="#"]) {
  text-decoration-thickness: 2px;
  text-decoration-color: hsl(var(--col-ternary));
}
a[href^="#"] {
  font-size: var(--step-0);
  text-decoration-color: hsl(var(--col-blk) / 0.25);
  text-decoration-line: underline;
  text-underline-offset: 0.3ex;
  text-decoration-thickness: 2px;
}

a:not([href^="/"], [href^="#"]):not([aria-disabled="true"]) {
  text-decoration-style: dashed;
}
a:not([href^="/"], [href^="#"]):not([aria-disabled="true"]):where(:focus, :hover) {
  text-decoration-color: hsl(var(--col-primary));
}

a span::after {
  
}


[data-date] {
  white-space: nowrap;
}

:where(button:where(:focus, :hover)) {
  color: hsl(var(--col-primary));
}
:where(button:where(:focus)) {
  outline: none;
  --focus-shadow: 0 0 0 2px hsl(var(--col-primary));
  border-radius: 2px;
} */
/* button {
  box-shadow: var(--focus-shadow);
} */
